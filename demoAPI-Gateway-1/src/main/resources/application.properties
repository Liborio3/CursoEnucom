#Configuracion para el servicio ApiGateway
server.port=8050
spring.application.name=demoAPI-Gateway-1
##agregue esto para poder correrlo
spring.main.allow-bean-definition-overriding=true

#Configuracion de eureka client


eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9000/eureka
#*******************************************************************
	#SEGURIDAD CON "SPRING SECURITY"


#USUARIO
spring.security.user.name=amaro
#CONSTRASEnA
spring.security.user.password=123456

#ROL
spring.security.user.roles=ADMIN



#Configuracion de los microservicios que controlara api gateway

#Microservicio CLIENTES
# http://localhost:8013/Clientes
spring.cloud.gateway.routes[0].id=CLIENTES
spring.cloud.gateway.routes[0].uri=http://localhost:8013
spring.cloud.gateway.routes[0].predicates[0]=Path=/Clientes/**

#Microservicio PRODUCTOS
# http://localhost:8010/PRODUCTOS
spring.cloud.gateway.routes[1].id=PRODUCTOS
spring.cloud.gateway.routes[1].uri=http://localhost:8010
spring.cloud.gateway.routes[1].predicates[0]=Path=/Productos/**

#Microservicio PROVEDORES
# http://localhost:8011/PROVEDORES
spring.cloud.gateway.routes[2].id=PROVEDORES
spring.cloud.gateway.routes[2].uri=http://localhost:8011
spring.cloud.gateway.routes[2].predicates[0]=Path=/Provedores/**

#Microservicio GESTION-TIENDA
# http://localhost:8014/TIENDA
spring.cloud.gateway.routes[3].id=GESTION-TIENDA
spring.cloud.gateway.routes[3].uri=http://localhost:8014
spring.cloud.gateway.routes[3].predicates[0]=Path=/Tienda/**


# Ajustar tiempos de heartbeat para evitar problemas de registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

